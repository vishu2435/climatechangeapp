{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport styles from './AddModel.module.css';\nimport BackDrop from '../../Components/BackDrop/Backdrop';\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\nimport StrikethroughSIcon from '@material-ui/icons/StrikethroughS';\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\nimport KeyboardTabIcon from '@material-ui/icons/KeyboardTab';\nimport CustomButton from '../../Components/CustomButton/CustomButton';\nimport AddModelImage from '../../Components/AddModalImage/AddModalImage';\nimport TagsContainer from '../TagsContainer/TagsContainer';\n\nclass AddpostModel extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"state\", {\n      placeHolder: 'Add Heading',\n      postingDisabled: true,\n      images: [],\n      tagsArray: []\n    });\n\n    _defineProperty(this, \"chooseImageFile\", () => {\n      document.getElementById('fieldPhoto').click();\n    });\n\n    _defineProperty(this, \"sendImageFile\", event => {\n      var file = event.currentTarget.files[0];\n      var fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n\n      fileReader.onload = () => {\n        let images = this.state.images;\n        images.push({\n          id: this.imageCounter++,\n          src: fileReader.result\n        });\n        this.setState({\n          images: images\n        });\n      };\n    });\n\n    _defineProperty(this, \"onEnterTextParagraph\", value => {\n      let el = document.querySelector(\"#paragraph\");\n\n      if (el.innerHTML !== '') {\n        document.querySelector('#placeholderParagraph').innerHTML = '';\n        this.setState({\n          postingDisabled: false\n        });\n      } else if (el.innerHTML === '') {\n        document.querySelector('#placeholderParagraph').innerHTML = 'Your Text';\n        this.setState({\n          postingDisabled: true\n        });\n      }\n    });\n\n    _defineProperty(this, \"deleteImage\", id => {\n      let images = this.state.images; // let index=images.findIndex(()=>())\n    });\n\n    _defineProperty(this, \"changeTagsArray\", array => {\n      this.setState({\n        tagsArray: array\n      }, () => {\n        console.log(\"Tags array \", this.state.tagsArray);\n      });\n    });\n\n    this.imageCounter = 0;\n    this.postingDisabled = true;\n  }\n\n  onEnterText(value) {\n    let el = document.querySelector(\"#heading\");\n\n    if (el.innerHTML !== '') {\n      document.querySelector('#placeholder').innerHTML = '';\n    } else if (el.innerHTML === '') {\n      document.querySelector('#placeholder').innerHTML = 'Add Heading';\n    }\n  }\n\n  formatText(event) {\n    let command = event.currentTarget.getAttribute('data_command');\n    console.log();\n    document.execCommand(command, false, null);\n  }\n\n  formatTextWithArgs(event) {\n    let command = event.currentTarget.getAttribute('data_command');\n    console.log();\n    document.execCommand(command, false, \"<blockquote>\");\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(BackDrop, null), __jsx(\"div\", null, __jsx(\"div\", {\n      className: styles.addModel\n    }, __jsx(\"div\", {\n      className: styles.editor_holder\n    }, __jsx(\"div\", {\n      id: \"heading\",\n      onInput: this.onEnterText,\n      className: styles.heading,\n      contentEditable: true\n    }), __jsx(\"div\", {\n      id: \"placeholder\",\n      onClick: () => {\n        document.getElementById(\"heading\").focus();\n      },\n      className: styles.placeHolder,\n      style: {\n        top: \"0px\"\n      }\n    }, \"Add Heading\")), __jsx(\"div\", {\n      style: {\n        maxHeight: \"200px\",\n        position: \"relative\",\n        width: \"100%\"\n      }\n    }, this.state.images.length > 0 ? __jsx(AddModelImage, {\n      deleteImage: this.deleteImage,\n      uniqueid: \"addModelImages1234\",\n      src: this.state.images,\n      maxHeight: \"200px\"\n    }) : null), __jsx(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: 'center'\n      }\n    }, __jsx(\"div\", {\n      id: \"icons\",\n      className: styles.icons\n    }, __jsx(\"div\", {\n      onClick: this.formatText,\n      data_command: \"bold\",\n      className: styles.icon\n    }, __jsx(FormatBoldIcon, {\n      style: {\n        color: 'white'\n      }\n    })), __jsx(\"div\", {\n      onClick: this.formatText,\n      data_command: \"italic\",\n      className: styles.icon\n    }, __jsx(FormatItalicIcon, {\n      style: {\n        color: 'white'\n      }\n    })), __jsx(\"div\", {\n      onClick: this.formatText,\n      data_command: \"strikeThrough\",\n      className: styles.icon\n    }, __jsx(StrikethroughSIcon, {\n      style: {\n        color: 'white'\n      }\n    })), __jsx(\"div\", {\n      onClick: this.formatText,\n      data_command: \"insertUnorderedList\",\n      className: styles.icon\n    }, __jsx(FormatListBulletedIcon, {\n      style: {\n        color: 'white'\n      }\n    })), __jsx(\"div\", {\n      onClick: this.formatText,\n      data_command: \"insertOrderedList\",\n      className: styles.icon\n    }, __jsx(FormatListNumberedIcon, {\n      style: {\n        color: 'white'\n      }\n    }))), __jsx(\"div\", {\n      className: styles.addImage\n    }, __jsx(CustomButton, {\n      onClick: this.chooseImageFile\n    }, \"Add Image\"), __jsx(\"input\", {\n      type: \"file\",\n      onChange: this.sendImageFile,\n      accept: \"image/*\",\n      id: \"fieldPhoto\",\n      style: {\n        display: \"none\"\n      }\n    }))), __jsx(\"div\", {\n      onMouseUp: this.getSelectedText,\n      onClick: () => document.getElementById(\"paragraph\").focus(),\n      className: styles.editor_holder + ' ' + styles.editor_holder_p\n    }, __jsx(\"p\", {\n      id: \"paragraph\",\n      onInput: this.onEnterTextParagraph,\n      className: styles.paragraph,\n      contentEditable: true\n    }), __jsx(\"div\", {\n      id: \"placeholderParagraph\",\n      onClick: () => document.getElementById(\"paragraph\").click(),\n      className: styles.placeHolder,\n      style: {\n        top: \"10px\"\n      }\n    }, \"Your Text\")), __jsx(TagsContainer, {\n      tagsArray: this.state.tagsArray,\n      changeTagsArray: this.changeTagsArray\n    }), __jsx(\"div\", {\n      className: styles.footer\n    }, __jsx(CustomButton, {\n      onClick: this.props.closeModel\n    }, \"Cancel\"), __jsx(CustomButton, {\n      disabled: this.state.postingDisabled\n    }, \"Post\")))));\n  }\n\n}\n\nexport default AddpostModel;","map":null,"metadata":{},"sourceType":"module"}